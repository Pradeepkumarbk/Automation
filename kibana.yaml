apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: elk
  labels:
    app: kibana
spec:
  type: LoadBalancer
  ports:
  - port: 5601
  selector:
    app: kibana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: elk
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:7.2.0
        resources:
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        # env:
          # - name: ELASTICSEARCH_URL
          #   value: http://elasticsearch:9200
          # - name: SERVER_BASEPATH
          #   value: "/kibana"
          # - name: SERVER_NAME
          #   value: kibana
          # - name: SERVER_HOST
          #   value: "0"
        ports:
        - containerPort: 5601
# ---
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: kibana-ingress
#   namespace: elk
#   annotations:
#     ingress.kubernetes.io/proxy-body-size: 100m
#     kubernetes.io/tls-acme: "true"
#     kubernetes.io/ingress.class: "nginx"
#     nginx.ingress.kubernetes.io/affinity: "cookie"
#     nginx.ingress.kubernetes.io/secure-backends: "true"
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
#     nginx.ingress.kubernetes.io/rewrite-target: /
# spec:
#   tls:
#   - hosts:
#     - dp-devops.jll.com
#     secretName: dp-devops.jll.com
#   rules:
#   # - host: 
#   - host: dp-devops.jll.com
#     http:
#       paths:
#       - path: /
#         backend:
#           serviceName: kibana
#           servicePort: 5601